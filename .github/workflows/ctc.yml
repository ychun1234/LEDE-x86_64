#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: ctc.x86_64

on: 
  release:
    types: [published]

  push:
    branches: 
      - main

  schedule:
    - cron: 2 3 * * 5
  
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/project-openwrt/openwrt
        REPO_BRANCH: openwrt-18.06
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH ctc
        cd ctc
        sed -i '5s/#//' feeds.conf.default
        
    - name: 更新 & 安装 feeds
      working-directory: ./ctc
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 自定义安装源
      working-directory: ./ctc
      run: |
        git clone https://github.com/kenzok8/litte package/litte

    - name: 自定义配置ctc文件
      env:
        CONFIG_FILE: 'ctc.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE ctc/.config
        chmod +x ./customize.sh && ./customize.sh
        cd ctc && rm -rf package/lienol/luci-app-passwall && rm -rf package/ctcgfw/luci-app-jd-dailybonus
        rm -rf package/lean/luci-app-ssr-plus && rm -rf package/ntlf9t/luci-app-clash && rm -rf package/ctcgfw/node-request && rm -rf package/ctcgfw/naiveproxy
        rm -rf package/litte/microsocks && rm -rf package/litte/redsocks2 && rm -rf package/litte/tcpping
        rm -rf package/ntlf9t/AdGuardHome && rm -rf package/ctcgfw/luci-app-adguardhome
        rm -rf package/litte/luci-app-advancedsetting && rm -rf package/litte/luci-app-aliddns
        rm -rf package/litte/gost && rm -rf package/litte/luci-app-gost && rm -rf package/litte/luci-app-eqos
        rm -rf package/ctcgfw/luci-app-openclash && rm -rf package/litte/luci-app-smartdns && rm -rf package/litte/smartdns
        rm -rf package/ctcgfw/luci-theme-atmaterial && rm -rf package/ctcgfw/luci-theme-opentomato && rm -rf package/ctcgfw/luci-theme-opentomcat
        cp -f package/litte/default-settings package/lean/default-settings/files/zzz-default-settings
        cp -f package/litte/banner package/base-files/files/etc/banner
        cp -f package/litte/ctcdiffconfig .config && make defconfig
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        

    - name: 下载包文件
      working-directory: ./ctc
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      working-directory: ./ctc
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : 上传固件与目录
      uses: actions/upload-artifact@main
      with:
        name: ctc
        path: ctc/bin
